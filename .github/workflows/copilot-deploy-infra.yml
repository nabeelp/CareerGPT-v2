name: copilot-deploy-infra

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
    outputs:
      deployment-id:
        description: "The Id of the current deployment."
        value: ${{jobs.deploy.outputs.deployment-id}}

jobs:
  deploy:
    environment: ${{inputs.ENVIRONMENT}}
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - { dotnet: "8.0", configuration: Release, os: ubuntu-latest }
    outputs:
      deployment-id: ${{steps.deployment-id.outputs.deployment_name}}

    runs-on: ${{ matrix.os }}
    steps:
      - name: Generate Deployment Id
        id: deployment-id
        run: echo "deployment_name=${{ vars.CC_DEPLOYMENT_NAME }}-$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          clean: true

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{vars.AZURE_GITHUB_ACCESS_APP_ID}}
          tenant-id: ${{vars.AZURE_GITHUB_ACCESS_TENANT_ID}}
          subscription-id: ${{vars.AZURE_GITHUB_ACCESS_SUB_ID}}
          enable-AzPSSession: false

      - name: deploy-infra
        uses: azure/CLI@v2
        env:
          OPENAI_KEY: "${{secrets.AZURE_OPENAI_ENDPOINT_KEY}}"
        with:
          azcliversion: 2.30.0
          inlineScript: |
            if [ -z "${{env.OPENAI_KEY}}" ]; then
              AI_SERVICE_KEY=$(az cognitiveservices account keys list --name ${{vars.AZURE_OPENAI_NAME}} --resource-group ${{vars.AZUREOPENAI_DEPLOYMENT_GROUP_NAME}} | jq -r '.key1')
            else
              AI_SERVICE_KEY="$OPENAI_KEY"
            fi
            echo "::add-mask::$AI_SERVICE_KEY"
            APP_TENANT_ID=${{vars.APPLICATION_TENANT_ID}}
            scripts/deploy/deploy-azure.sh --subscription ${{vars.AZURE_SUBSCRIPTION_ID}} --resource-group ${{vars.CC_DEPLOYMENT_GROUP_NAME}} --deployment-name ${{steps.deployment-id.outputs.deployment_name}} --region ${{vars.CC_DEPLOYMENT_REGION}} --client-id ${{vars.BACKEND_CLIENT_ID}} --frontend-client-id ${{vars.APPLICATION_CLIENT_ID}} --tenant-id $APP_TENANT_ID --instance ${{vars.AZURE_INSTANCE}} --ai-service AzureOpenAI --ai-endpoint ${{vars.AZURE_OPENAI_ENDPOINT}} --ai-service-key $AI_SERVICE_KEY --app-service-sku ${{vars.WEBAPP_API_SKU}} --app-name ${{vars.WEBAPP_APP_NAME}} --completion-model ${{vars.AZURE_OPENAI_COMPLETION_MODEL}} --no-deploy-package --debug-deployment
